//huge thanks to niemand for helping me with depth aware blur
float getLinearDepth(float depth) {
   return (2.0 * near) / (far + near - depth * (far - near));
}

const vec2 blurOffsets64[64] = vec2[](
   vec2(0.07966914016126773, -0.0005732549414365637),
   vec2(-0.12160530145582471, 0.10283965425501301),
   vec2(0.008559818525228833, -0.197458844206032),
   vec2(0.13356640242431705, 0.18501312713480866),
   vec2(-0.269830801109193, -0.04676021929400281),
   vec2(0.23862848827685754, -0.15791561224005177),
   vec2(-0.09145217101863704, 0.3071892456093635),
   vec2(-0.16649994145461533, -0.30437045701653237),
   vec2(0.33360187330480306, 0.12444185472734362),
   vec2(-0.3648472506019276, 0.14643122426640393),
   vec2(0.16295804188571, -0.36743756507231173),
   vec2(0.11814591296857804, 0.40389274018272564),
   vec2(-0.39109215347150406, -0.22216619295880752),
   vec2(0.43984778429926974, -0.0991894497563406),
   vec2(-0.2824726599141313, 0.38881286099524415),
   vec2(-0.07196259394779835, -0.48861810336110434),
   vec2(0.3795331553348995, 0.3266462474773111),
   vec2(-0.5311851850227693, 0.02103235353520492),
   vec2(0.3723796163057802, -0.3798174856209827),
   vec2(-0.03421619527550065, 0.5508226133906681),
   vec2(-0.37133596181036055, -0.43510931729303065),
   vec2(0.5657057697780938, 0.07671481330934922),
   vec2(-0.49542832895271105, 0.33806627476843804),
   vec2(0.12427771910967947, -0.5917579278786026),
   vec2(0.2988957646566429, 0.536255888187953),
   vec2(-0.6100770454895419, -0.19242280712483223),
   vec2(0.5754234023037136, -0.27046195686657265),
   vec2(-0.2617843818309086, 0.6041130418557645),
   vec2(-0.2345742995202231, -0.6285079469299325),
   vec2(0.59225695199046, 0.31528297143325706),
   vec2(-0.6762525075113398, 0.17538638065344198),
   vec2(0.37071132728294354, -0.5906749150680255),
   vec2(0.1119798859418661, 0.7017402283731283),
   vec2(-0.5807270152810202, -0.4435682524557845),
   vec2(0.7229827225912143, -0.06119326417718071),
   vec2(-0.5144794788954391, 0.5461387788248901),
   vec2(-0.005035179534685496, -0.7557546423829214),
   vec2(0.5055857377426614, 0.5663728829872585),
   vec2(-0.7810140733390272, -0.07214936952359105),
   vec2(0.6170681003447506, -0.47552351060683423),
   vec2(-0.15109977600025168, 0.7820762666899624),
   vec2(-0.43760314844428994, -0.6821127366950525),
   vec2(0.7772009255491943, 0.21481487028437787),
   vec2(-0.742204728724318, 0.3758394044302885),
   vec2(0.28114246867378123, -0.7824253564882913),
   vec2(0.3091922614465049, 0.7803683548608),
   vec2(-0.7789831306606205, -0.36561570268862775),
   vec2(0.8145440939773348, -0.2543941296975529),
   vec2(-0.4488757377357506, 0.7504758305912105),
   vec2(-0.1933624476019976, -0.8604246222601459),
   vec2(0.7154581485450054, 0.513848417434855),
   vec2(-0.8988765686147268, 0.11036534262592021),
   vec2(0.5783350546530844, -0.6902686901177914),
   vec2(0.024600692161986272, 0.9131155784626814),
   vec2(-0.6564461645240189, -0.657849672537283),
   vec2(0.9212949234450745, 0.04697899281368057),
   vec2(-0.7330423210662792, 0.5978985715758123),
   vec2(0.12225611512756368, -0.9393399804201348),
   vec2(0.5334856827883492, 0.7868760176859763),
   vec2(-0.948368229388031, -0.21678429915641398),
   vec2(0.8372175428305082, -0.4798472000523386),
   vec2(-0.31121110469716806, 0.9318623471900049),
   vec2(-0.41881630178513873, -0.899674402337137),
   vec2(0.9082566602526256, 0.38845471061254216)
);

vec3 NormalAwareBlur() {
    vec3 blur = vec3(0.0);
    vec3 normal = normalize(DecodeNormal(texture2D(colortex2, texCoord).xy));
    vec2 pixelSize = 1.0 / vec2(viewWidth, viewHeight);

	float z0 = texture2D(depthtex0, texCoord.xy).r;
	float linearDepth0 = getLinearDepth(z0);

    float totalWeight = 0.0;

    for (int i = 0; i < 64; i++){
        float weight = 1.0;
        vec2 offset = blurOffsets64[i] * pixelSize * 14.0 * int(z0 > 0.56);

		vec3 currentNormal = normalize(DecodeNormal(texture2D(colortex2, texCoord + offset).xy));

        float currentDepth = texture2D(depthtex0, texCoord + offset).r;
        float currentDepthLinear = getLinearDepth(currentDepth);

        float depthDifference = pow32(exp2(1.0 - abs(currentDepthLinear - linearDepth0)));
        float normalDifference = dot(normal, currentNormal);

        vec3 sspt = texture2D(colortex3, texCoord + offset).rgb;
             sspt = pow4(sspt) * 128.0;

        weight *= clamp(depthDifference * normalDifference, 0.001, 1.0);

        blur += weight * sspt;
        totalWeight += weight;
    }
    
    return blur / totalWeight;
}